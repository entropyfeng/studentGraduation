<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.university.graduation.dao.GraduationFlowMapper" >
  <resultMap id="BaseResultMap" type="com.university.graduation.domain.bo.GraduationFlow" >
    <constructor >
      <idArg column="graduation_flow_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="graduation_flow_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="graduation_flow_enable_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="graduation_flow_year" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="graduation_flow_begin_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="graduation_flow_end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="graduation_flow_student_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="graduation_flow_set_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    graduation_flow_id, graduation_flow_name, graduation_flow_enable_status, graduation_flow_year, 
    graduation_flow_begin_time, graduation_flow_end_time, graduation_flow_student_num, 
    graduation_flow_set_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.university.graduation.domain.bo.GraduationFlowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from graduation_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from graduation_flow
    where graduation_flow_id = #{graduationFlowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from graduation_flow
    where graduation_flow_id = #{graduationFlowId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.university.graduation.domain.bo.GraduationFlowExample" >
    delete from graduation_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.university.graduation.domain.bo.GraduationFlow" >
    insert into graduation_flow (graduation_flow_id, graduation_flow_name, 
      graduation_flow_enable_status, graduation_flow_year, 
      graduation_flow_begin_time, graduation_flow_end_time, 
      graduation_flow_student_num, graduation_flow_set_status
      )
    values (#{graduationFlowId,jdbcType=INTEGER}, #{graduationFlowName,jdbcType=VARCHAR}, 
      #{graduationFlowEnableStatus,jdbcType=INTEGER}, #{graduationFlowYear,jdbcType=INTEGER}, 
      #{graduationFlowBeginTime,jdbcType=TIMESTAMP}, #{graduationFlowEndTime,jdbcType=TIMESTAMP}, 
      #{graduationFlowStudentNum,jdbcType=INTEGER}, #{graduationFlowSetStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.university.graduation.domain.bo.GraduationFlow" >
    insert into graduation_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="graduationFlowId != null" >
        graduation_flow_id,
      </if>
      <if test="graduationFlowName != null" >
        graduation_flow_name,
      </if>
      <if test="graduationFlowEnableStatus != null" >
        graduation_flow_enable_status,
      </if>
      <if test="graduationFlowYear != null" >
        graduation_flow_year,
      </if>
      <if test="graduationFlowBeginTime != null" >
        graduation_flow_begin_time,
      </if>
      <if test="graduationFlowEndTime != null" >
        graduation_flow_end_time,
      </if>
      <if test="graduationFlowStudentNum != null" >
        graduation_flow_student_num,
      </if>
      <if test="graduationFlowSetStatus != null" >
        graduation_flow_set_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="graduationFlowId != null" >
        #{graduationFlowId,jdbcType=INTEGER},
      </if>
      <if test="graduationFlowName != null" >
        #{graduationFlowName,jdbcType=VARCHAR},
      </if>
      <if test="graduationFlowEnableStatus != null" >
        #{graduationFlowEnableStatus,jdbcType=INTEGER},
      </if>
      <if test="graduationFlowYear != null" >
        #{graduationFlowYear,jdbcType=INTEGER},
      </if>
      <if test="graduationFlowBeginTime != null" >
        #{graduationFlowBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="graduationFlowEndTime != null" >
        #{graduationFlowEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="graduationFlowStudentNum != null" >
        #{graduationFlowStudentNum,jdbcType=INTEGER},
      </if>
      <if test="graduationFlowSetStatus != null" >
        #{graduationFlowSetStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.university.graduation.domain.bo.GraduationFlowExample" resultType="java.lang.Integer" >
    select count(*) from graduation_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update graduation_flow
    <set >
      <if test="record.graduationFlowId != null" >
        graduation_flow_id = #{record.graduationFlowId,jdbcType=INTEGER},
      </if>
      <if test="record.graduationFlowName != null" >
        graduation_flow_name = #{record.graduationFlowName,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationFlowEnableStatus != null" >
        graduation_flow_enable_status = #{record.graduationFlowEnableStatus,jdbcType=INTEGER},
      </if>
      <if test="record.graduationFlowYear != null" >
        graduation_flow_year = #{record.graduationFlowYear,jdbcType=INTEGER},
      </if>
      <if test="record.graduationFlowBeginTime != null" >
        graduation_flow_begin_time = #{record.graduationFlowBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.graduationFlowEndTime != null" >
        graduation_flow_end_time = #{record.graduationFlowEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.graduationFlowStudentNum != null" >
        graduation_flow_student_num = #{record.graduationFlowStudentNum,jdbcType=INTEGER},
      </if>
      <if test="record.graduationFlowSetStatus != null" >
        graduation_flow_set_status = #{record.graduationFlowSetStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update graduation_flow
    set graduation_flow_id = #{record.graduationFlowId,jdbcType=INTEGER},
      graduation_flow_name = #{record.graduationFlowName,jdbcType=VARCHAR},
      graduation_flow_enable_status = #{record.graduationFlowEnableStatus,jdbcType=INTEGER},
      graduation_flow_year = #{record.graduationFlowYear,jdbcType=INTEGER},
      graduation_flow_begin_time = #{record.graduationFlowBeginTime,jdbcType=TIMESTAMP},
      graduation_flow_end_time = #{record.graduationFlowEndTime,jdbcType=TIMESTAMP},
      graduation_flow_student_num = #{record.graduationFlowStudentNum,jdbcType=INTEGER},
      graduation_flow_set_status = #{record.graduationFlowSetStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.university.graduation.domain.bo.GraduationFlow" >
    update graduation_flow
    <set >
      <if test="graduationFlowName != null" >
        graduation_flow_name = #{graduationFlowName,jdbcType=VARCHAR},
      </if>
      <if test="graduationFlowEnableStatus != null" >
        graduation_flow_enable_status = #{graduationFlowEnableStatus,jdbcType=INTEGER},
      </if>
      <if test="graduationFlowYear != null" >
        graduation_flow_year = #{graduationFlowYear,jdbcType=INTEGER},
      </if>
      <if test="graduationFlowBeginTime != null" >
        graduation_flow_begin_time = #{graduationFlowBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="graduationFlowEndTime != null" >
        graduation_flow_end_time = #{graduationFlowEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="graduationFlowStudentNum != null" >
        graduation_flow_student_num = #{graduationFlowStudentNum,jdbcType=INTEGER},
      </if>
      <if test="graduationFlowSetStatus != null" >
        graduation_flow_set_status = #{graduationFlowSetStatus,jdbcType=INTEGER},
      </if>
    </set>
    where graduation_flow_id = #{graduationFlowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.university.graduation.domain.bo.GraduationFlow" >
    update graduation_flow
    set graduation_flow_name = #{graduationFlowName,jdbcType=VARCHAR},
      graduation_flow_enable_status = #{graduationFlowEnableStatus,jdbcType=INTEGER},
      graduation_flow_year = #{graduationFlowYear,jdbcType=INTEGER},
      graduation_flow_begin_time = #{graduationFlowBeginTime,jdbcType=TIMESTAMP},
      graduation_flow_end_time = #{graduationFlowEndTime,jdbcType=TIMESTAMP},
      graduation_flow_student_num = #{graduationFlowStudentNum,jdbcType=INTEGER},
      graduation_flow_set_status = #{graduationFlowSetStatus,jdbcType=INTEGER}
    where graduation_flow_id = #{graduationFlowId,jdbcType=INTEGER}
  </update>
</mapper>